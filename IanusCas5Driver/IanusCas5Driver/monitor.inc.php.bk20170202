<?php
try{
if (file_exists($_SERVER['DOCUMENT_ROOT']."/../config/ianus-addons.inc.php")){
	include_once $_SERVER['DOCUMENT_ROOT']."/../config/ianus-addons.inc.php";
}


$_SERVER['Shib-Application-ID']=strtolower(explode(".",$_SERVER['HTTP_HOST'])[0]);

#da non eliminare la seguente riga di codice se non si sa cosa si sta facendo. Giorgio Delsignore 25/03/2013
error_reporting(E_ERROR|E_PARSE);
global $newFarm;
$newFarm=true;
if ($_SERVER['REQUEST_URI']=='/DriverIanus/monitor.inc.php'){
	header("location: /");
	die();
}
if ($_SERVER['REQUEST_URI']=='/header'){
        echo "<pre>";
	var_dump($_SERVER);
        die();
}

if (!isset ( $_SERVER ['REMOTE_USERID'] )) {
	$split=split("\.", $_SERVER['uid']);
	foreach ($split as $key=>$val){
		if ($key<count($split)-1){
			$remote_user=$val.".";
		}
	}
	$remote_user=rtrim($remote_user, ".");
	$_SERVER['REMOTE_USERID']=$remote_user;
}

if ($_SERVER['REDIRECT_URL']=="/authzssl/httpError.php"){
	$httpCode=$_GET['code'];
	header("HTTP/1.0 $httpCode Not Found");
	$language = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);
	if ($language=='') $language='it';
	$language=strtoupper($language);
	if (file_exists("/http/lib/IanusCasDriver/template/httpError_{$httpCode}_{$language}.html")) $errorPage=file_get_contents("/http/lib/IanusCasDriver/template/httpError_{$httpCode}_{$language}.html");
	else $errorPage=file_get_contents("/http/lib/IanusCasDriver/template/httpError_{$httpCode}_IT.html");
	die($errorPage);
}

//include_once("/http/lib/php_utils/nosuch_web.php");
//per far funzionare FirePHP nel debug (chiedere a Giorgio, Edoardo)
ob_start();

putenv("NLS_LANG=AMERICAN_AMERICA.AL32UTF8");
if(!defined('DEFAULT_LIBS'))
            define('DEFAULT_LIBS',"/http/lib/php_utils/");
if (file_exists(DEFAULT_LIBS."debug/FirePHPCore/fb.php")) include_once(DEFAULT_LIBS."debug/FirePHPCore/fb.php");
if (file_exists(DEFAULT_LIBS."config/Configurable.php")) include_once(DEFAULT_LIBS."config/Configurable.php");
if (file_exists(DEFAULT_LIBS."config/DefaultConfig.php")) include_once (DEFAULT_LIBS."config/DefaultConfig.php");

set_error_handler("myErrorHandler", E_NOTICE);
function myErrorHandler($errno, $errstr, $errfile, $errline)
{
	
	$string_log="[".date("d/m/Y H:i:s")."] ";
	if (isset($_SERVER['REMOTE_USER'])) $string_log.="[{$_SERVER['REMOTE_USER']}] ";
    switch ($errno) {
    case E_ERROR:
    	$file_log.=preg_replace("!html$!", "PHP_ERROR.log",$_SERVER['DOCUMENT_ROOT']);
    	$string_log.="ERROR [$errno] $errstr - $errfile($errline)\n";
    	break;

    case E_WARNING:
    	$file_log=preg_replace("!html$!", "PHP_WARNING.log",$_SERVER['DOCUMENT_ROOT']);
        $string_log.="WARNING [$errno] $errstr - $errfile($errline)\n";
        break;

    case E_NOTICE:
    	$file_log=preg_replace("!html$!", "PHP_NOTICE.log",$_SERVER['DOCUMENT_ROOT']);
    	$string_log.="NOTICE [$errno] $errstr - $errfile($errline)\n";
        break;

    default:
    	$file_log=preg_replace("!html$!", "PHP_UNKNOWN.log",$_SERVER['DOCUMENT_ROOT']);
    	$string_log.="UNKNOWN [$errno] $errstr - $errfile($errline)\n";
        break;
    }
	return true;
}

$config_service='';
include_once 'libs.inc';
if ($_SERVER ['REQUEST_URI'] == "/NagiosProbe") {
	try{
		$conn=new DriverIanusDBConnection();
	} catch ( Exception $e ) {
		die("ERROR");
	}
	die("OK");
}

if ($_SERVER ['REQUEST_URI'] == "/SSLNagiosProbe") {
	try{
		$conn=new DriverIanusDBConnection();
	} catch ( Exception $e ) {
		die("ERROR");
	}
	die($_SERVER['REMOTE_USER']);
}

if ($_SERVER ['REQUEST_URI'] == "/SSLProbe") {
	try{
		$conn=new DriverIanusDBConnection();
	} catch ( Exception $e ) {
		die("ERROR");
	}
	die("OK");
}

$DriverIanusConnection = new DriverIanusDBConnection ( );
if (preg_match ( "!inactivityCron!", $_SERVER ['REQUEST_URI'] )){
	inactivityCron($DriverIanusConnection);
	die();
}


//Gestione cookieConsent
if ($_SERVER ['REQUEST_URI'] == "/authzssl/cookieConsentCss") {
	$content=file_get_contents( "/http/lib/IanusCasDriver/cookieConsent/cookieConsent.css" );
	header("Content-type: text/css");
	die($content);
}

if ($_SERVER ['REQUEST_URI'] == "/authzssl/cookieConsentJs") {
	readfile ( "/http/lib/IanusCasDriver/cookieConsent/cookieconsent.js" );
	die();
}

if ($_SERVER ['REQUEST_URI'] == "/authzssl/cookieInform") {
	$language = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);
	if (strtoupper($language) == strtoupper("it")){$language_show='IT';}else {$language_show='EN';}
	readfile( "/http/lib/IanusCasDriver/cookieConsent/cookieInform_{$language}.htm" );
	die();
}

if (preg_match("!^/authzssl/pentaho-public/!",$_SERVER ['REQUEST_URI'])){
	include_once 'pentaho-proxy.inc.php';
	die();
}


if (preg_match("!/reps/!", $_SERVER ['REQUEST_URI'])) {
	$reportFile=preg_replace("!/reps/!", "", $_SERVER ['REQUEST_URI']);
	require_once "reps/index.php";
	die();
}


/*
 * GESTIONE DELLE PAGINE DI CORTESIA PER BLOCCHI
 *
 */
if (!isset($_GET ['URI'])) {
	
	$sql_query="select * from CAS_SERVICES where upper(trim(URL))='".strtoupper($_SERVER['HTTP_HOST'])."'";

$sql=new DriverIanusSql($DriverIanusConnection);



$sql->getRow($sql_query);
$sid=$sql->row['SID'];
$remote_users_spec=explode("|", $_SERVER['HTTP_AUTHZ_SERVICEUSERIDS']);
foreach ($remote_users_spec as $key=>$val){
	$tmpExplode=explode(":", $val);
	$remote_users[$tmpExplode[0]]=$tmpExplode[1];
}
$thisRemoteUser=$remote_users[$sid];
if ($sql->row['ENABLED']!='1'){
	$lang = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);
	$lang=strtoupper($lang);
	$force_open=false;
	if ($_GET['FORCEOPEN']!='') {
		setcookie("FORCEOPEN","ok");
		$force_open=true;
	}
	if ($_COOKIE['FORCEOPEN']=='ok') $force_open=true;
	if (!$force_open){
		if(file_exists($_SERVER['DOCUMENT_ROOT']."/stop_service.php")){
			include_once($_SERVER['DOCUMENT_ROOT']."/stop_service.php");
			die($html_stop_page);
		}
        else if ( preg_match("/agenziafarmaco/", strtolower($_SERVER['HTTP_HOST']))){
            $html=file_get_contents("/http/servizi/AIFA_WF/idp-aifa/html/cortesia.html");
            die($html);
        }
		else{
			if (file_exists("/http/lib/DriverIanus/template/fermo_{$lang}.html"))
				$html=file_get_contents("/http/lib/DriverIanus/template/fermo_{$lang}.html");
			else
				$html=file_get_contents("/http/lib/DriverIanus/template/fermo_IT.html");
			die($html);
		}
	}
}
$authzsslEnabled[$_SERVER['HTTP_HOST']]=true;
}






/*
if (preg_match ( "!login.php$!", $_SERVER ['REQUEST_URI'] ) && !preg_match("/ticket\/osticket/",$_SERVER ['REQUEST_URI']) ) {
	if (($authzsslEnabled[$_SERVER['HTTP_HOST']]) && $_SERVER['SERVER_PORT']!='443'){
		$_SERVER['REQUEST_URI']=str_replace('/authzssl','',$_SERVER['REQUEST_URI']);	
		header("location: https://{$_SERVER['HTTP_HOST']}/authzssl".$_SERVER['REQUEST_URI']);
		die();
	}
	LoginGest($DriverIanusConnection);
}
*/
if (preg_match ( "!forget_password!", $_SERVER ['REQUEST_URI'] )) {
	if (($authzsslEnabled[$_SERVER['HTTP_HOST']]) && $_SERVER['SERVER_PORT']!='443'){
	    $_SERVER['REQUEST_URI']=str_replace('/authzssl','',$_SERVER['REQUEST_URI']);
		header("location: https://{$_SERVER['HTTP_HOST']}/authzssl".$_SERVER['REQUEST_URI']);
		die();
	}
	ForgetPassword($DriverIanusConnection);
}

if (preg_match ( "!forget_userid!", $_SERVER ['REQUEST_URI'] )) {
	if (($authzsslEnabled[$_SERVER['HTTP_HOST']]) && $_SERVER['SERVER_PORT']!='443'){
		$_SERVER['REQUEST_URI']=str_replace('/authzssl','',$_SERVER['REQUEST_URI']);
		header("location: https://{$_SERVER['HTTP_HOST']}/authzssl".$_SERVER['REQUEST_URI']);
		die();
	}
	ForgetUserid($DriverIanusConnection);
}

if ($_SERVER ['REQUEST_URI'] == "/accessError.html") AccessError();
if ($_SERVER ['REQUEST_URI'] == "/ShibLogOut" || $_SERVER ['REQUEST_URI'] == "/ShibLogOut\?\&" || preg_match ( "!ShibLogOut!", $_SERVER ['REQUEST_URI'] )) GlobalLogout($DriverIanusConnection);

/**
 * Modifica per l'inserimento delle righe di login nella tabella SESSIONS del servizio,
 * solo nei servizi PIERREL
 * 
 * M. Verrocchio 23/08/2011 
 */


if (preg_match("/hypernetproject\.com$/i", $_SERVER ['HTTP_HOST'])) {
	// Alter della tabella
	$sessions_cols = array ('ID' => 'NUMBER not null',
							'SESSION_ID' => 'CHAR(32)',
							'USERID' => 'VARCHAR2(20)',
							'DATA' => 'DATE',
							'URL' => 'VARCHAR2(2000)',
							'REFERER' => 'VARCHAR2(2000)',
							'TIPO' => 'VARCHAR2(20)' );
	$query = new DriverIanusSql ($DriverIanusConnection);
	$query_check_existence = "SELECT COLUMN_NAME FROM USER_TAB_COLUMNS WHERE TABLE_NAME='SESSIONS'";
	$query->Exec($query_check_existence);
	while ($query->getRow()) {
		$tb_vals[$query->row['COLUMN_NAME']] = $query->row['COLUMN_NAME'];
	}
	foreach ($sessions_cols as $key => $val) {
		if (!in_array($key, $tb_vals)) {
			$alter_sessions_table = "ALTER TABLE SESSIONS ADD $key $val";
			$query->doCommand ($alter_sessions_table);
		}
	}
	
	// Prendo i valori
	//$remote_userid=substr($_SERVER['REMOTE_USERID'], 0, strpos($_SERVER['REMOTE_USERID'], "@"));
	$remote_userid=$thisRemoteUser;
	$url = "https://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
	$url_from = $_SERVER['HTTP_REFERER'];
	$url_tipo = "L";
	$session_id = substr($_SERVER['HTTP_SHIB_SESSION_ID'], 1, 32);
	
	// Controllo che se esiste la session_id
	$sql = new DriverIanusSql ( $DriverIanusConnection );
	$sql_query = "SELECT COUNT(*) AS PREVIOUS_SESSIONS FROM SESSIONS WHERE SESSION_ID=:session_id AND USERID=:remote_userid";
	unset($bind_session);
	$bind_session['SESSION_ID']=$session_id;	
	$bind_session['REMOTE_USERID']=$remote_userid;
	$sql->getRow ( $sql_query , $bind_session );
	$previous_sessions = $sql->row['PREVIOUS_SESSIONS'];
	
	if ($previous_sessions == 0 && $session_id != '' && $remote_userid != '') {
		// Controllo che l'utente non abbia la password scaduta
		$sql = new DriverIanusSql ( $DriverIanusConnection );
		$sql_query = "SELECT CASE WHEN NVL(DTTM_SCADENZAPWD, SYSDATE) < SYSDATE THEN 1 ELSE 0 END AS EXPIRED FROM UTENTI WHERE USERID='".$remote_userid."'";
		$sql->getRow ( $sql_query );
		if ($sql->row['EXPIRED']!=1) {
			// Inserisco il Login solo se non ha la password in scadenza
			// Prendo l'ultimo id
			$sql = new DriverIanusSql ( $DriverIanusConnection );
			$sql_query = "select ID from (select * from sessions t order by data desc) where rownum=1";
			$sql->getRow ( $sql_query );
			$session_number = $sql->row['ID']+1;
			
			// Inserisco la riga per il logout
			$sql->doCommand("insert into sessions(id, session_id, userid, data, url, referer, tipo) values(".$session_number.", '".$session_id."', '".$remote_userid."', sysdate , '".$url."', '".$url_from."', '".$url_tipo."')");
			$DriverIanusConnection->commit();
		}
	}
}	

if (isset ( $_GET ['URI'] )) {
	PerlMonitor($DriverIanusConnection);
	die();
}

foreach ( $_SERVER as $key => $val ) {
	$new_key = preg_replace ( "!^REDIRECT_!", "", $key );
	$_SERVER [$new_key] = $val;
}

/* Compatibilità con php4*/
foreach ( $_GET as $key => $val ) {
	$HTTP_GET_VARS [$key] = $val;
}
foreach ( $_POST as $key => $val ) {
	$HTTP_POST_VARS [$key] = $val;
}
/* Fine Compatibilità con php4*/

$link_to = $_SERVER ['REQUEST_URI'];
$script = split ( "\?", $link_to );
$script = $script [0];

/* Hack per DRUPAL Gestione Clean Urls */
$drupal['EARNEST.SISSDEV.CINECA.IT']="/earnest_drupal/"; // EARNEST
$drupal['EARNEST.SISSDEV.CINECA.IT']="/drupal-6.19/"; // EARNEST DRUPAL 6.19
$drupal['MEDISHARE.SISSDEV.CINECA.IT']="/"; // MEDISHARE
$drupal['NEAT.SISSDEV.CINECA.IT']="/"; // NEAT
$drupal['RICERCA-CLINICA.SISSDEV.CINECA.IT']="/"; // RICERCA CLINICA
$drupal['SIUMB.SISSDEV.CINECA.IT']="/"; // SIUMB
$drupal['VENICE.SISSDEV.CINECA.IT']="/"; // VENICE
$drupal['FEDERICOII.SISSDEV.CINECA.IT']="/"; // FEDERICO II

$drupal_ok=false;

$service_script_dir = $_SERVER ['DOCUMENT_ROOT'];

$decoded_script=urldecode($script);
if (!preg_match("!casAuthn!", $script) && isset($drupal[strtoupper($_SERVER['HTTP_HOST'])]) && !(is_dir($service_script_dir.$script) || file_exists($service_script_dir.$script) || file_exists($service_script_dir.$decoded_script))){
	if (preg_match("!^".$drupal[strtoupper($_SERVER['HTTP_HOST'])]."!", $_SERVER['REQUEST_URI']) && !preg_match("!\.css$!",$_SERVER['REQUEST_URI'])){
		$script=$drupal[strtoupper($_SERVER['HTTP_HOST'])]."index.php";
		if (!isset($_GET['q'])) $_GET['q']=preg_replace("!^{$drupal[strtoupper($_SERVER['HTTP_HOST'])]}!", "", $_SERVER['REQUEST_URI']);
		$_GET['q']=str_replace("?", "/", $_GET['q']);
		$drupal_ok=true;
	}
}

if (isset($_GET['q']) && !preg_match('|\.php|i',$script) && !preg_match('|\.htm|i',$script)  && !$drupal_ok) {
	$script.="index.php"; //hack per drupal
}

if ($script=='/sessionNameJs'){
	echo "var SESSION_NAME = '{$_SERVER['HTTP_AUTHZ_UID']}';\n";
	echo "var HOME_FOLDER = '/home/{$_SERVER['HTTP_AUTHZ_UID']}';\n";
	echo "var FULL_QUALIFIED_URL='https://{$_SERVER['HTTP_HOST']}/pentaho/';\n";
	die();
}


if (preg_match("!^\/global-overrides\/!", $_SERVER['REDIRECT_URL'])){
	$finfo = finfo_open(FILEINFO_MIME_TYPE);
	$filePath=$_SERVER['DOCUMENT_ROOT']."/global-overrides".$_SERVER['REDIRECT_SCRIPT_URL'];
	$script=$_SERVER['REDIRECT_SCRIPT_URL'];
	if (preg_match("/\.css$/",$script)) {
		header ( "Content-type:text/css" );
	} elseif (preg_match("/\.xls$/",$script)) {
		header('Content-Disposition: attachment;');
	} elseif (preg_match("/\.pdf$/",$script)) {
		header('Content-type: application/pdf; Content-Disposition: attachment;');
	} elseif (preg_match("/\.avi1$/",$script)) {
		header("Content-Transfer-Encoding: binary\n;".'Content-type: video/x-msvideo; Content-Disposition: inline; Cache-Control: no-cache, must-revalidate; ');
	} elseif (preg_match("/\.mov1$/",$script)) {
		header('Content-type: video/quicktime; Content-Disposition: inline; Cache-Control: no-cache, must-revalidate; ');
	}
	readfile($filePath);
	die();
}




$is_cgi = false;
$found = false;
$service_script_dir = $_SERVER ['DOCUMENT_ROOT'];
if (is_dir ( "{$service_script_dir}{$script}" )) {
	if (file_exists ( "{$service_script_dir}{$script}/index.html" ) && ! $found) {
		$found = true;
		$script .= "index.html";
	}
	if (file_exists ( "{$service_script_dir}{$script}/index.htm" ) && ! $found) {
		$found = true;
		$script .= "index.htm";
	}
	if (file_exists ( "{$service_script_dir}{$script}/index.php" ) && ! $found) {
		$found = true;
		$script .= "index.php";
	}
}

$_SERVER ['SCRIPT_NAME'] = $script;
$_SERVER ['SCRIPT_FILENAME'] = $script;
$_SERVER ['PHP_SELF'] = $script;



if (is_dir(getDir ( "{$service_script_dir}{$script}" )))
chdir ( getDir ( "{$service_script_dir}{$script}" ) );

if (isset($_GET['MonitorReportChart'])){
	include_once "config.inc";
	ServiceTimeReport($DriverIanusConnection);
}

$ret = isPublic ( $script, $DriverIanusConnection );

if ($ret ['passwd_flag'] == '1')
	$public = false;
else
	$public = true;



if (isset ( $_SERVER ['REMOTE_USERID'] )) {
	
	$sql=new DriverIanusSql($DriverIanusConnection);
	$sql_sso="select userid from IDP_SSO_USERS where upper(userid)=:remote_userid";
    unset($bind);
    $bind['REMOTE_USERID']=$_SERVER ['REMOTE_USERID'];
    if(!preg_match("/@/",$_SERVER['HTTP_AUTHZ_UID'])){
    	$_SERVER ['SSO_USERID']=$_SERVER['HTTP_AUTHZ_UID'];
    	$sso_user=true;
    }
	/*
	$sql->Exec($sql_sso,$bind);
	if ($sql->getRow()){
			$sso_user=true;
			$_SERVER ['SSO_USERID']=$_SERVER ['REMOTE_USERID'];
			$sql_query="select id from IDP_SERVIZI where upper(url)=:http_host";
			unset($bind);
            $bind['HTTP_HOST']=strtoupper($_SERVER ['HTTP_HOST']);
			$sql->Exec($sql_query,$bind);
			$sql->getRow();
			$id_serv=$sql->row['ID'];
			$sql_query_user="select serviceuser, selected from IDP_SSO_ASSOCIATIONS where upper(ssouser)=:remote_userid and serviceuser like '%@'||:id_serv";
			$sql=new DriverIanusSql($DriverIanusConnection);
            unset($bind);
            $bind['REMOTE_USERID']=$_SERVER ['REMOTE_USERID'];
            $bind['ID_SERV']=$id_serv;
			$sql->Exec($sql_query_user,$bind);
			if ($sql->numRows>1){
				$linkChangeShibProfile="https://{$_SERVER['HTTP_HOST']}{$_SERVER['REQUEST_URI']}/changeShibProfile";
				$select='';
				$selectedUser='';
				while ($sql->getRow()){
					$userid=preg_replace("!@{$id_serv}$!", "", $sql->row['SERVICEUSER']);
					$sql_2="select azienda_ente from ana_utenti where userid=:service_user";
					$sql2=new DriverIanusSql($DriverIanusConnection);
                    unset($bind);
                    $bind['SERVICE_USER']=$userid;
					$sql2->Exec($sql_2,$bind);
					$sql2->getRow();
					$userSpec=$sql2->row['AZIENDA_ENTE'];
					if ($sql->row['SELECTED']==1) {
						$selectedUser=$sql->row['SERVICEUSER'];
						$users[$sql->row['SERVICEUSER']]=true;
					}
					else $users[$sql->row['SERVICEUSER']]=false;
					$select.="<option value='{$sql->row['SERVICEUSER']}'>$userSpec</option>";
				}
				
				if (isset($_POST['SissShibUser'])){
					if (isset($users[$_POST['SissShibUser']])){
						$sql_query_1="update IDP_SSO_ASSOCIATIONS set selected=null where upper(ssouser)=:remote_userid and serviceuser like '%@'||:id_serv";
						$sql_query_2="update IDP_SSO_ASSOCIATIONS set selected=1 where upper(ssouser)=:remote_userid and serviceuser = :shib_user";
						//setcookie("SissShibUser", $_POST['SissShibUser'], time()+10000000);
						$sql2=new DriverIanusSql($DriverIanusConnection);
                        unset($bind);
                        $bind['REMOTE_USERID']=$_SERVER ['REMOTE_USERID'];
                        $bind['ID_SERV']=$id_serv;
                        unset($bind2);
                        $bind2['REMOTE_USERID']=$_SERVER ['REMOTE_USERID'];
                        $bind2['SHIB_USER']=$_POST['SissShibUser'];
						$sql2->Exec($sql_query_1,$bind);
						$sql2->Exec($sql_query_2,$bind2);
						$DriverIanusConnection->commit();
						header("location: https://{$_SERVER['HTTP_HOST']}{$_SERVER['REQUEST_URI']}");
						die();
					}
				}
				if ($selectedUser=='' || preg_match("!changeShibProfile$!", $_SERVER['REQUEST_URI'])){
					$action=preg_replace("!changeShibProfile$!","", $_SERVER['REQUEST_URI']);
					$ret="
							<form method=\"POST\" action=\"$action\" align=\"center\">
								<select name='SissShibUser'>
									<option>Selezionare il profilo di accesso</option>
									$select
								</select><br/>
								<input type='submit' value=\"Effettua l'accesso\">
							</form>
					";
					$content=file_get_contents("/http/lib/DriverIanus/LOGIN/template/changeShibProfile-AIFA.html");
					
					$content=str_replace("<!--body-->", $ret, $content);
					die($content);
				}
				else {
					$_SERVER['REMOTE_USERID']=$selectedUser;
				}
			}
			else {
			$sql->getRow();
			$_SERVER['REMOTE_USERID']=$sql->row['SERVICEUSER'];
			}
	}
	*/
	$_SERVER['REMOTE_USER']=$thisRemoteUser;
	$_SERVER['REMOTE_USERID']=$thisRemoteUser;
	$remote_user=$thisRemoteUser;
	$remote_userid=$thisRemoteUser;
	$_SERVER['PHP_AUTH_USER']=$thisRemoteUser;
	$sidSplit=explode(".", $sid);
	$auths[0]=$thisRemoteUser;
	$auths[1]=$sidSplit[0];
	$_SERVER ['ID_PRINC_SERV'] = $auths [1];
	ForceChangeUserGest($DriverIanusConnection, $auths);
}
/*Blcocco controllo abilitazione */
if ($_SERVER['REMOTE_USER']!=''){
	$sql=new DriverIanusSql($DriverIanusConnection);
	$sqlCheckAbilitazione="select abilitato from utenti where userid=:remote_userid";
	unset($bind);
	//var_dump($sqlCheckAbilitazione);
	
	$bind['REMOTE_USERID']=$_SERVER['REMOTE_USER'];
	//var_dump($bind);
	$sql->setSql($sqlCheckAbilitazione);
	$row=$sql->getRow($sqlCheckAbilitazione, $bind);
	//var_dump($sql->row);
	if ($sql->row['ABILITATO']==0) {
		forbidden("...", "it");
		die();
	}
}

if ($_SERVER['REQUEST_URI']=='/change_password'){
	ChangePassword($DriverIanusConnection);
	die();
}

if (preg_match("!^/ConfirmaGestSuccess!",$_SERVER['REQUEST_URI'])){
	include_once '/http/lib/DriverIanus/ConfirmaGest.inc.php';
	$ist=new ConfirmaGest();
	$ist->gestSuccess();
	die();
}

#LUIGI: ConfirmaDownload, chiamata di passaggio tra metodi get_links e get_signed per firma digitale
if (preg_match("!^/ConfirmaDownload!",$_SERVER['REQUEST_URI'])){
	include_once '/http/lib/DriverIanus/ConfirmaGest.inc.php';
	$ist=new ConfirmaGest();
	$ist->get_signed($_GET['TID'],$_GET['DOCID']);
	die();
}


if (preg_match("!html2ps.php!",$_SERVER['REQUEST_URI'])){
	$_GET['URL']=str_replace("https", "http", $_GET['URL']);
	$_REQUEST['URL']=str_replace("https", "http", $_REQUEST['URL']);
	$url=str_replace("https", "http", $_GET['URL']);
	if (preg_match("!\?!", $url)){
		$url.="&MON_USERID={$_SERVER['REMOTE_USER']}&MON_CALLER={$_SERVER['PHP_SELF']}";
	}
	else $url.="?MON_USERID={$_SERVER['REMOTE_USER']}&MON_CALLER={$_SERVER['PHP_SELF']}";
	if (!preg_match("!html2ps\.php!",$_SERVER['PHP_SELF'])){
		$lock_file=$_SERVER['DOCUMENT_ROOT'];
		$lock_file=rtrim($lock_file,"/");
		$lock_file.=$_GET['MON_CALLER'];
		$lock_file=str_replace("demo/html2ps.php", "monitor_control/".$_SERVER['HTTP_HOST']."-".$_GET['MON_USERID'].".lock", $lock_file);
		$lock_content=file_get_contents($lock_file);
		$splits=split("\n",$lock_content);
		$_SERVER['REMOTE_USERID']=$splits[0];
		$_SERVER['GRUPPI']=$splits[1];
		
		if (isset ( $_SERVER ['HTTP_AUTHZ_UID'] )) {
			$auths = split ( "@", $_SERVER ['HTTP_AUTHZ_UID'] );
			
			$_SERVER ['REMOTE_USER'] = $auths [0];
			$_SERVER ['PHP_AUTH_USER'] = $auths [0];
			$_SERVER ['ID_PRINC_SERV'] = $auths [1];
			ForceChangeUserGest($DriverIanusConnection, $auths);
		}
		$public=true;
	}
	$_GET['URL']=$url;
	$_REQUEST['URL']=$url;
	$_SERVER['QUERY_STRING']=str_replace("URL=https", "URL=http", $_SERVER['QUERY_STRING']);
	$_SERVER['REDIRECT_QUERY_STRING']=str_replace("URL=https", "URL=http", $_SERVER['REDIRECT_QUERY_STRING']);
}

include_once("functionpoint.php");
if(false && $_SERVER['SERVER_NAME']=='antineoplastici.agenziafarmaco.it'){
	$FPConnection=new DriverIanusDBConnection();
	$FPTracker=FPTracker::newFPTracker($FPConnection);
}



//$service_script_dir=getcwd();
$_SERVER ['PATH_TRANSLATED'] = "{$service_script_dir}{$script}";
$_SERVER ['SCRIPT_FILENAME'] = "{$service_script_dir}{$script}";
$_SERVER ['SCRIPT_NAME'] = "{$script}";
if (! isset ( $_SERVER ['PATH_TRANSLATED'] ))
	$_SERVER ['PATH_TRANSLATED'] = $_SERVER ['SCRIPT_FILENAME'];
if ($_SERVER['SERVER_PORT']=='443') $_SERVER['HTTPS']=1;
if ($_SERVER['SERVER_PORT']=='8443') $_SERVER['HTTPS']=1;




if (! $public && ! isset ( $_SERVER ['HTTPS'] )) {
	header ( "Location: https://{$_SERVER['SERVER_NAME']}{$_SERVER['REQUEST_URI']}" );
	die();
}


if (! $public) {
//Update della data di ultimo accesso
    $sql=new DriverIanusSql($DriverIanusConnection);
    $updateUltimoAccesso="update utenti set dttm_ultimoaccesso=sysdate where userid = :remote_userid";
    unset($bind);
    $bind['REMOTE_USERID']=$_SERVER['REMOTE_USER'];
    $sql->doCommand($updateUltimoAccesso,$bind);
    $DriverIanusConnection->commit ();
//Fine update data di ultimo accesso

if(userDisabledForInactivity($_SERVER ['REMOTE_USER'],$DriverIanusConnection)){

	
	if(file_exists("{$_SERVER['DOCUMENT_ROOT']}/login.conf.inc")){

		/* File personalizzato per il singolo servizio
		* SETTARE LA VARIABILE $language al suo interno e i corrispondenti valori nella lingua scelta!!!
		*/
		include_once("{$_SERVER['DOCUMENT_ROOT']}/login.conf.inc");
	}else{

		/* Carico la configurazione standard */
		include_once("/http/lib/DriverIanus/LOGIN/login.conf.inc");
		//$login_template = file_get_contents("/http/lib/DriverIanus/LOGIN/template/login.html");
		//$language = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);
	}
	$lang=strtoupper($language);
	forbidden($script, $lang,'AMR01 - User disabled for inactivity');
}
	
	$_SERVER ['GRUPPI']=$_SERVER ['HTTP_AUTHZ_GRUPPI'];
	if (! UserAuthorized ( $_SERVER ['REMOTE_USER'], $_SERVER ['GRUPPI'], $ret ['script_ammin'], $DriverIanusConnection )) {
		$values_log[]=$_SERVER ['REMOTE_USER'];
		$values_log[]= $_SERVER ['GRUPPI'];
		$values_log[]= $ret ['script_ammin'];
		$values_log[]= $DriverIanusConnection ;
		$lang = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);
		
		/* Carico la configurazione */
		if(file_exists("{$_SERVER['DOCUMENT_ROOT']}/login.conf.inc")){

			/* File personalizzato per il singolo servizio
			 * SETTARE LA VARIABILE $language al suo interno e i corrispondenti valori nella lingua scelta!!!
			 */
			include_once("{$_SERVER['DOCUMENT_ROOT']}/login.conf.inc");
		}else{

			/* Carico la configurazione standard */
			include_once("/http/lib/DriverIanus/LOGIN/login.conf.inc");
			//$login_template = file_get_contents("/http/lib/DriverIanus/LOGIN/template/login.html");
			//$language = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);
		}
		$lang=strtoupper($language);
		forbidden($script, $lang, 'AMR02 - User not authorized');
	}
}







if (preg_match("!utf8fix!i", $_SERVER['REQUEST_URI'])){
	$DriverIanusConnection->close();
	include_once 'Utf8Fix.php';
	die();
}

if (preg_match("!utf8check!i", $_SERVER['REQUEST_URI'])){
	$DriverIanusConnection->close();
	include_once 'Utf8Check.php';
	die();
}

// Gestione della scadenza password, assegnare l'utente al gruppo di funzioni base-profile e mettare la password scaduta per farla cambiare al primo accesso
if(!$sso_user){
    $SQL_SCADENZA_PWD="select case when nvl(dttm_scadenzapwd,sysdate) < sysdate then 1 else 0 end as REDIRECT from utenti
where userid=:remote_userid
";
    unset($bind);
    $bind['REMOTE_USERID']=$_SERVER['REMOTE_USERID'];
}
else{
	$SQL_SCADENZA_PWD="select case when nvl(sso.dttm_scadenzapwd,sysdate) < sysdate then 1 else 0 end as REDIRECT from CAS_USERS sso where sso.userid=:sso_userid";
    unset($bind);
    $bind['SSO_USERID']=$_SERVER ['SSO_USERID'];
}
$sql = new DriverIanusSql ( $DriverIanusConnection );
$sql->getRow ( $SQL_SCADENZA_PWD ,$bind);

if ($sql->row['REDIRECT']==1){
	if (
	$script!='/change_password'
	&& !preg_match("!\.css$!", $script)
	&& !preg_match("!\.jpg$!", $script)
	&& !preg_match("!\.gif$!", $script)
	&& !preg_match("!\.png$!", $script)
	) {
		header ("Location: /change_password");
		die();
	}
}
//Fine gestione scadenza passwd

if (isset($wordpress) && count($wordpress)>0){
	foreach ($wordpress as $key=>$val){
		if ((preg_match("!^{$key}!", $_SERVER['REQUEST_URI'])) && !(is_dir($service_script_dir.$script)
				|| file_exists($service_script_dir.$script) || file_exists($service_script_dir.$decoded_script))){
			chdir ( getDir ( $_SERVER ['DOCUMENT_ROOT'].$wordpress[strtoupper($_SERVER['HTTP_HOST'])] ) );
			include_once($_SERVER ['DOCUMENT_ROOT'].$key."index.php");
			die();
		}
	}
}





if (isset($drupal) && count($drupal)>0){
	foreach ($drupal as $key=>$val){
		if ((preg_match("!^{$key}!", $_SERVER['REQUEST_URI'])) && !(is_dir($service_script_dir.$script)
				|| file_exists($service_script_dir.$script) || file_exists($service_script_dir.$decoded_script))){
			chdir ( getDir ( $_SERVER ['DOCUMENT_ROOT'].$drupal[strtoupper($_SERVER['HTTP_HOST'])] ) );
			$drupal_rewrite = true;
			if (isset($drupal_escludi) && count($drupal_escludi)>0){
				foreach ($drupal_escludi as $k=>$v){
					if (substr($_SERVER['URL'], 0, strlen($k)) == $k) {
						$drupal_rewrite = false;
					}
				}
			}
			if ($drupal_rewrite) {
				$_GET['q'] = str_replace('/', '', $_SERVER['REDIRECT_SCRIPT_URL']);
				include_once($_SERVER ['DOCUMENT_ROOT'].$key."index.php");
				die();
			}
		}
	}
}

if ($script=="/casAuthn/login.php"){
	
	include "LOGIN/login.cas.php";
}


$DriverIanusConnection->__destruct ();

}catch (Exception $ex){
	echo $ex->xdebug_message;
	die();
}

if ($script=="/fusionChart/gantt_swf.php"){
	include_once "/http/lib/fusionChart/gantt_swf.php";
	die();
}

if ($script=="/fusionChart/Charts/FCF_Gantt.swf"){
	readfile ( "/http/lib/fusionChart/Charts/FCF_Gantt.swf" );
	die();
}


if (preg_match ( "!.php$!", $script )) {
	if(!$public && Configurable::queryConfiguration("Shibboleth","PassiveLogout")=='on')
	PassiveLogoutCheck($DriverIanusConnection,Configurable::queryConfiguration("Shibboleth","PassiveLogoutSeconds"));
	if (file_exists ( "{$service_script_dir}{$script}" )) {
		$DriverIanusScript = "{$service_script_dir}{$script}";
		$script = '';
		include_once ($DriverIanusScript);
	} else {
		header("HTTP/1.0 404 Not Found");
		$language = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);
		if ($language=='') $language='it';
		$language=strtoupper($language);
		$page_not_found_content=file_get_contents("/http/lib/IanusCasDriver/template/pageNotFound_{$language}.html");
		die($page_not_found_content);
	}
} else {
	$script=urldecode($script);
	
	if (file_exists ( "{$service_script_dir}{$script}" )) {
		if (preg_match ( "/\.htm/", $script ) || preg_match ( "/\.html/", $script )) {

			//system("rm -f ".xdebug_get_profiler_filename());
			//header ( "Content-type:text/html" );
			//readfile ( "{$service_script_dir}{$script}" );
			$filename=split("/", $script);
			$filename=$filename[count($filename)-1];
			if (preg_match("!HASHCONTROLLED!", $script)){
				$hash=MonMD5AdminMd5Crypt($filename, $_GET['sed']);
				if ($hash!=$_GET['hash']){
					die("errore di accesso alla pagina");
				}
			}
			$html=file_get_contents("{$service_script_dir}{$script}");
			foreach ($url_prod as $key => $val){
				if ($_SERVER['SERVER_ADDR']=='10.253.4.23' || $_SERVER['SERVER_ADDR']=='10.253.4.24'){
					$html=str_replace("http://$val", "http://{$key}.sissdev.cineca.it", $html);
					$html=str_replace("https://$val", "http://{$key}.sissdev.cineca.it", $html);
				}
			}
			die ($html);
		} else	{
			if (preg_match("/\.css$/",$script)) {
				header ( "Content-type:text/css" );
			} elseif (preg_match("/\.xls$/",$script)) {
				header('Content-Disposition: attachment;');
			} elseif (preg_match("/\.pdf$/",$script)) {
				header('Content-type: application/pdf; Content-Disposition: attachment;');
			} elseif (preg_match("/\.avi1$/",$script)) {
				header("Content-Transfer-Encoding: binary\n;".'Content-type: video/x-msvideo; Content-Disposition: inline; Cache-Control: no-cache, must-revalidate; ');
			} elseif (preg_match("/\.mov1$/",$script)) {
				header('Content-type: video/quicktime; Content-Disposition: inline; Cache-Control: no-cache, must-revalidate; ');
			} elseif (preg_match("/\.m4v1$/",$script) || preg_match("/\.mov1$/",$script)) {
				ob_clean();
				$file = $service_script_dir.$script;
				$fp = @fopen($file, 'rb');
				$size   = filesize($file); // File size
				$length = $size;           // Content length
				$start  = 0;               // Start byte
				$end    = $size - 1;       // End byte
				header('Content-type: video/quicktime');
				header('Content-Disposition: inline; filename='.$service_script_dir.$script);
				header("Accept-Ranges: 0-$length");
				header("Content-Range: bytes $start-$end/$size");
				header("Content-Transfer-Encoding:��� binary");
				header("Content-Length: ".$length);
				$buffer = 1024 * 8;
				while(!feof($fp) && ($p = ftell($fp)) <= $end) {
				    if ($p + $buffer > $end) {
				        $buffer = $end - $p + 1;
				    }
				    set_time_limit(0);
				    echo fread($fp, $buffer);
				    flush();
				}
				fclose($fp);
			} elseif (preg_match("/\.m4v2$/",$script)){
				header("Content-Transfer-Encoding: binary\n");
				header("Content-type: video/x-m4v; Content-Disposition: inline; filename=\"".$service_script_dir.$script."\"; Content-Length: ".filesize($service_script_dir.$script).";");
			} elseif (preg_match("!/SHIB_DOWNLOAD/!", $script)) {
				header('Content-Disposition: attachment;');
			} else {
				header ( "Content-type:*" );
			}
		}
		ob_clean();
		if (!preg_match("/\.m4v$/",$script) && !preg_match("/\.mov$/",$script)) {
			$file = $service_script_dir.$script;
			if($_SERVER['HTTP_HOST']=='siopel-public.sissdev.cineca.it' && pathinfo($file, PATHINFO_EXTENSION) != 'pdf'){
	   			header("Content-Disposition: attachment; filename=" . basename($script) );   
				header("Content-Length: " . filesize($file));
				$handle = @fopen($file, "rb");
				if ($handle) {
					while (!feof($handle)) {
	    				echo fread($handle, 1024);
						ob_flush();
					}
					fclose($handle);
				}
				exit;				
			} else {
				readfile ( "{$service_script_dir}{$script}" );
			}
		}
		//ob_end_flush();
		//die();
	} else {
		header("HTTP/1.0 404 Not Found");
		$language = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);
		if ($language=='') $language='it';
		$language=strtoupper($language);
		$page_not_found_content=file_get_contents("/http/lib/IanusCasDriver/template/pageNotFound_{$language}.html");
		die($page_not_found_content);
	}
}




function rangeDownload($file) {
 
	$fp = @fopen($file, 'rb');
 
	$size   = filesize($file); // File size
	$length = $size;           // Content length
	$start  = 0;               // Start byte
	$end    = $size - 1;       // End byte
	// Now that we've gotten so far without errors we send the accept range header
	/* At the moment we only support single ranges.
	 * Multiple ranges requires some more work to ensure it works correctly
	 * and comply with the spesifications: http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.2
	 *
	 * Multirange support annouces itself with:
	 * header('Accept-Ranges: bytes');
	 *
	 * Multirange content must be sent with multipart/byteranges mediatype,
	 * (mediatype = mimetype)
	 * as well as a boundry header to indicate the various chunks of data.
	 */
	//header("Accept-Ranges: 0-$length");
	 header('Accept-Ranges: bytes');
	 header("Content-Length: $length");
	 //header('Keep-Alive: timeout=15, max=100');
	 //header('Connection: Keep-Alive');
	// multipart/byteranges
	// http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.2
	// Notify the client the byte range we'll be outputting
	header("Content-Range: bytes $start-$end/$size");
	 
	// Start buffered download
	$buffer = 1024 * 8;
	while(!feof($fp) && ($p = ftell($fp)) <= $end) {
 
		if ($p + $buffer > $end) {
 
			// In case we're only outputtin a chunk, make sure we don't
			// read past the length
			$buffer = $end - $p + 1;
		}
		set_time_limit(0); // Reset time limit for big files
		echo fread($fp, $buffer);
		flush(); // Free up memory. Otherwise large files will trigger PHP's memory limit.
	}
 
	fclose($fp);
 
}



?>
